{% extends 'base.html.twig' %}

{% block title %}Your Shopping List!{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .shopping-list-container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        .ingredient-row {
            display: flex;
            gap: 10px;
            margin-bottom: 15px;
            align-items: center;
        }
        .ingredient-input {
            flex: 2;
        }
        .amount-input {
            flex: 1;
        }
        .add-btn {
            flex: 0 0 40px;
            height: 38px;
        }
        .list-name-input {
            width: 100%;
            padding: 10px;
            margin-bottom: 20px;
            font-size: 1.2rem;
        }
        .save-btn {
            margin-top: 20px;
            padding: 10px 20px;
            font-size: 1.1rem;
        }
    </style>
{% endblock %}

{% block body %}
<style>
    .example-wrapper { margin: 1em auto; max-width: 800px; width: 95%; font: 18px/1.5 sans-serif; }
    .example-wrapper code { background: #F5F5F5; padding: 2px 6px; }
</style>


<section class="py-5 text-white text-center">
    <div class="container">
        <h1 class="display-4 fw-bold">My shopping lists</h1>  
    </div>
</section>

<div class="container shopping-list-container">
    {# Form Start #}
    <form id="shopping-list-form">
        {# List Name #}
        <input type="text" class="form-control list-name-input mb-3" placeholder="Name your shopping list" required>
        
        {# Ingredients Container #}
        <div id="ingredients-container">
            {# First Row - will be added dynamically when clicking the + button #}
        </div>
        
        {# Initial Add Button #}
        <div class="text-center mt-4">
            <button type="button" id="initial-add-btn" class="btn btn-warning fs-2 fw-bold lh-1">
                +
            </button>
        </div>
        
        {# Save Button #}
        <div class="text-center">
            <button type="submit" class="btn btn-primary save-btn">Save List</button>
        </div>
    </form>
</div>

<hr>

<br>

<hr>

<div class="example-wrapper">
    This friendly message is coming from:
    <ul>
        <li>Your controller at <code>C:/xampp/htdocs/mealitup/src/Controller/ShoppingListController.php</code></li>
        <li>Your template at <code>C:/xampp/htdocs/mealitup/templates/shopping_list/index.html.twig</code></li>
    </ul>
</div>
{% endblock %}
{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const ingredientsContainer = document.getElementById('ingredients-container');
            const initialAddBtn = document.getElementById('initial-add-btn');
            let rowCount = 0;

            // Function to add a new ingredient row
            function addIngredientRow() {
                const rowId = `ingredient-row-${rowCount}`;
                
                const rowDiv = document.createElement('div');
                rowDiv.className = 'ingredient-row';
                rowDiv.id = rowId;
                
                // Ingredient Name Input (required)
                const nameInput = document.createElement('input');
                nameInput.type = 'text';
                nameInput.className = 'form-control ingredient-input';
                nameInput.placeholder = 'Ingredient *';
                nameInput.required = true;
                nameInput.name = `ingredients[${rowCount}][name]`;
                
                // Amount Input (optional)
                const amountInput = document.createElement('input');
                amountInput.type = 'number';
                amountInput.className = 'form-control amount-input';
                amountInput.placeholder = 'Amount (g)';
                amountInput.name = `ingredients[${rowCount}][amount]`;
                amountInput.min = 0;
                
                // Remove Button (hidden by default)
                const removeButton = document.createElement('button');
                removeButton.type = 'button';
                removeButton.className = 'btn btn-outline-danger remove-btn';
                removeButton.innerHTML = 'Ã—';
                removeButton.onclick = function() {
                    ingredientsContainer.removeChild(rowDiv);
                    // If we're removing the last row, show add button on previous row
                    if (rowCount > 0) {
                        rowCount--;
                        const lastRow = document.getElementById(`ingredient-row-${rowCount-1}`);
                        if (lastRow) {
                            const addBtn = document.createElement('button');
                            addBtn.type = 'button';
                            addBtn.className = 'btn btn-warning add-btn';
                            addBtn.innerHTML = '+';
                            addBtn.onclick = addIngredientRow;
                            lastRow.appendChild(addBtn);
                        }
                    }
                };
                
                // Add Button (will move to new row)
                const addButton = document.createElement('button');
                addButton.type = 'button';
                addButton.className = 'btn btn-warning add-btn';
                addButton.innerHTML = '+';
                addButton.onclick = addIngredientRow;
                
                // Append elements to row
                rowDiv.appendChild(nameInput);
                rowDiv.appendChild(amountInput);
                rowDiv.appendChild(removeButton);
                rowDiv.appendChild(addButton);
                
                // Add row to container
                ingredientsContainer.appendChild(rowDiv);
                
                // Hide initial button after first row is added
                if (rowCount === 0) {
                    initialAddBtn.style.display = 'none';
                }
                
                // Move the add button to the new row
                if (rowCount > 0) {
                    const prevRow = document.getElementById(`ingredient-row-${rowCount-1}`);
                    const prevAddBtn = prevRow.querySelector('.add-btn');
                    if (prevAddBtn) {
                        prevRow.removeChild(prevAddBtn);
                    }
                }
                
                rowCount++;
            }
            
            // Initialize with first row when clicking initial button
            initialAddBtn.addEventListener('click', addIngredientRow);
            
            // Form submission
            document.getElementById('shopping-list-form').addEventListener('submit', function(e) {
                e.preventDefault();
                
                // Validate at least one ingredient has a name
                const nameInputs = document.querySelectorAll('.ingredient-input');
                let hasValidIngredient = false;
                
                nameInputs.forEach(input => {
                    if (input.value.trim() !== '') {
                        hasValidIngredient = true;
                    }
                });
                
                if (!hasValidIngredient) {
                    alert('Please add at least one ingredient with a name');
                    return;
                }
                
                // Here you would handle the form submission with AJAX or regular form submit
                alert('Shopping list will be saved!');
            });
        });
    </script>
{% endblock %}