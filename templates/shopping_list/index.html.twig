{% extends 'base.html.twig' %}

{% block title %}My Shopping Lists{% endblock %}

{% block body %}
<style>
    .card-wrapper {
        margin-bottom: 2rem;
    }
</style>
<section class="py-5 bg-light">
    <div class="container bg-white p-3">
        <h1>My shopping lists <a class="btn btn-sm custom-button" href="{{ path('app_shopping_list_new') }}">Add list</a></h1>
        <p class="mb-3 text-muted">Your current lists</p>
        <div class="row">
            {% for list in lists %}
                <div class="col-12 col-sm-6 col-md-3 col-lg-3 card-wrapper">
                    <div class="card h-100">
                        <div class="card-body text-center">
                            <h5>{{ list.name }}</h5>
                            <ul class="list-unstyled">
                                {% for item in list.items %}
                                    <li>{{ item.amount }} {{ item.name }}</li>
                                {% endfor %}
                            </ul>
                        </div>
                        <div class="btn-group">
                            <a href="{{ path('app_shopping_list_edit', {'id': list.id}) }}" 
                            class="btn btn-sm btn-outline-primary">
                                Edit
                            </a>
                            
                            <form method="post" 
                                action="{{ path('app_shopping_list_delete', {'id': list.id}) }}"
                                onsubmit="return confirm('Are you sure?')">
                                <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ list.id) }}">
                                <button class="btn btn-sm btn-outline-danger">Delete</button>
                            </form>
                        </div>
                    </div>
                </div>
            {% endfor %}
        </div>
    </div>
</section>
{% endblock %}

{# {% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const ingredientsContainer = document.getElementById('ingredients-container');
            const initialAddBtn = document.getElementById('initial-add-btn');
            let rowCount = 0;

            // Function to add a new ingredient row
            function addIngredientRow() {
                const rowId = `ingredient-row-${rowCount}`;
                
                const rowDiv = document.createElement('div');
                rowDiv.className = 'ingredient-row';
                rowDiv.id = rowId;
                
                // Ingredient Name Input (required)
                const nameInput = document.createElement('input');
                nameInput.type = 'text';
                nameInput.className = 'form-control ingredient-input';
                nameInput.placeholder = 'Ingredient *';
                nameInput.required = true;
                nameInput.name = `ingredients[${rowCount}][name]`;
                
                // Amount Input (optional)
                const amountInput = document.createElement('input');
                amountInput.type = 'number';
                amountInput.className = 'form-control amount-input';
                amountInput.placeholder = 'Amount (g)';
                amountInput.name = `ingredients[${rowCount}][amount]`;
                amountInput.min = 0;
                
                // Remove Button (hidden by default)
                const removeButton = document.createElement('button');
                removeButton.type = 'button';
                removeButton.className = 'btn btn-outline-danger remove-btn';
                removeButton.innerHTML = 'Ã—';
                removeButton.onclick = function() {
                    ingredientsContainer.removeChild(rowDiv);
                    // If we're removing the last row, show add button on previous row
                    if (rowCount > 0) {
                        rowCount--;
                        const lastRow = document.getElementById(`ingredient-row-${rowCount-1}`);
                        if (lastRow) {
                            const addBtn = document.createElement('button');
                            addBtn.type = 'button';
                            addBtn.className = 'btn btn-warning add-btn';
                            addBtn.innerHTML = '+';
                            addBtn.onclick = addIngredientRow;
                            lastRow.appendChild(addBtn);
                        }
                    }
                };
                
                // Add Button (will move to new row)
                const addButton = document.createElement('button');
                addButton.type = 'button';
                addButton.className = 'btn btn-warning add-btn';
                addButton.innerHTML = '+';
                addButton.onclick = addIngredientRow;
                
                // Append elements to row
                rowDiv.appendChild(nameInput);
                rowDiv.appendChild(amountInput);
                rowDiv.appendChild(removeButton);
                rowDiv.appendChild(addButton);
                
                // Add row to container
                ingredientsContainer.appendChild(rowDiv);
                
                // Hide initial button after first row is added
                if (rowCount === 0) {
                    initialAddBtn.style.display = 'none';
                }
                
                // Move the add button to the new row
                if (rowCount > 0) {
                    const prevRow = document.getElementById(`ingredient-row-${rowCount-1}`);
                    const prevAddBtn = prevRow.querySelector('.add-btn');
                    if (prevAddBtn) {
                        prevRow.removeChild(prevAddBtn);
                    }
                }
                
                rowCount++;
            }
            
            // Initialize with first row when clicking initial button
            initialAddBtn.addEventListener('click', addIngredientRow);
            
            // Form submission
            document.getElementById('shopping-list-form').addEventListener('submit', function(e) {
                e.preventDefault();
                
                // Validate at least one ingredient has a name
                const nameInputs = document.querySelectorAll('.ingredient-input');
                let hasValidIngredient = false;
                
                nameInputs.forEach(input => {
                    if (input.value.trim() !== '') {
                        hasValidIngredient = true;
                    }
                });
                
                if (!hasValidIngredient) {
                    alert('Please add at least one ingredient with a name');
                    return;
                }
                
                // Here you would handle the form submission with AJAX or regular form submit
                alert('Shopping list will be saved!');
            });
        });
    </script>
{% endblock %} #}

